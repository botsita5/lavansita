<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>La Vansita - Inventario de Ford Transit en Miami Springs</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
        .hero-bg {
            background-image: linear-gradient(to top, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.2)), url('https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg');
            background-size: cover;
            background-position: center;
        }
        .vehicle-card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }
        .vehicle-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 12px -3px rgba(0, 0, 0, 0.1), 0 3px 6px -2px rgba(0, 0, 0, 0.05);
        }
        .modal {
            display: none;
            background-color: rgba(0, 0, 0, 0.6);
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 700px;
            margin-left: auto;
            margin-right: auto;
            height: 350px;
            max-height: 450px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 400px;
            }
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-800">

    <header class="bg-white shadow-sm sticky top-0 z-50">
        <nav class="container mx-auto px-6 py-4 flex justify-between items-center">
            <div class="text-2xl font-bold text-gray-900">
                <span class="text-green-700">La</span>Vansita
            </div>
            <a href="#contacto" class="bg-green-700 text-white font-semibold px-5 py-2 rounded-lg hover:bg-green-800 transition-colors duration-300">
                Contacto
            </a>
        </nav>
    </header>

    <main>
        <section class="hero-bg text-white min-h-[60vh] flex items-center">
            <div class="container mx-auto px-6 text-center">
                <h1 class="text-4xl md:text-6xl font-bold leading-tight mb-4">¬°Encuentra Tu Ford Transit Ideal en La Vansita!</h1>
                <p class="text-lg md:text-xl text-gray-200 mb-8 max-w-3xl mx-auto">Explora nuestro inventario de furgonetas Ford Transit de calidad, listas para tus necesidades comerciales o personales.</p>
                <a href="#inventario" class="bg-green-700 text-white font-bold px-8 py-4 rounded-lg hover:bg-green-800 transition-transform duration-300 transform hover:scale-105">Ver Inventario</a>
            </div>
        </section>

        <section id="inventario" class="py-16 md:py-24 bg-white">
            <div class="container mx-auto px-6">
                <div class="text-center mb-12">
                    <h2 class="text-3xl md:text-4xl font-bold text-gray-900">Nuestro Inventario Actual de Ford Transit</h2>
                    <p class="text-gray-600 mt-2">Descubre las furgonetas Ford Transit disponibles. Usa los filtros para encontrar lo que buscas.</p>
                </div>

                <div class="mb-8 flex flex-col sm:flex-row gap-4">
                    <input type="text" id="search-input" placeholder="Buscar por modelo..." class="flex-grow p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-700">
                    <select type="text" id="make-filter" class="p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-700" disabled>
                        <option value="Ford">Ford</option>
                    </select>
                    <select id="year-filter" class="p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-700">
                        <option value="">Todos los A√±os</option>
                    </select>
                </div>

                <div id="vehicle-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
                </div>

                <div class="text-center mt-12">
                    <h3 class="text-2xl font-bold text-gray-900 mb-6">Estad√≠sticas de Nuestro Inventario</h3>
                    <p class="text-gray-600 mb-4">Un vistazo a la distribuci√≥n de modelos de Ford Transit en nuestro inventario actual.</p>
                    <div class="chart-container">
                        <canvas id="makeDistributionChart"></canvas>
                    </div>
                </div>
            </div>
        </section>

        <section id="contacto" class="py-16 md:py-24 bg-green-700 text-white">
            <div class="container mx-auto px-6 text-center">
                <h2 class="text-4xl font-bold mb-4">¬øListo para Tu Pr√≥xima Ford Transit?</h2>
                <p class="text-green-100 mb-8 max-w-2xl mx-auto">Cont√°ctanos hoy mismo para m√°s informaci√≥n, una prueba de manejo o para discutir opciones de financiaci√≥n.</p>
                <div class="bg-white text-gray-800 rounded-xl shadow-2xl p-8 max-w-4xl mx-auto grid md:grid-cols-2 gap-8 text-left">
                    <div>
                        <h3 class="text-2xl font-bold mb-4">Informaci√≥n de Contacto</h3>
                        <div class="space-y-4">
                            <p class="flex items-start">
                                <span class="text-green-700 mt-1 mr-3">üìû</span>
                                <span>
                                    <strong class="block">Ll√°manos:</strong>
                                    <a href="tel:+17868507699" class="hover:underline">786-850-7699</a>
                                </span>
                            </p>
                            <p class="flex items-start">
                                <span class="text-green-700 mt-1 mr-3">üìç</span>
                                <span>
                                    <strong class="block">Vis√≠tanos en:</strong>
                                    Miami Auto Credit, Miami Springs, Florida
                                </span>
                            </p>
                            <p class="flex items-start">
                                <span class="text-green-700 mt-1 mr-3">‚úâÔ∏è</span>
                                <span>
                                    <strong class="block">Env√≠anos un Email:</strong>
                                    <a href="mailto:info@miamiautocredit.com" class="hover:underline">info@miamiautocredit.com</a>
                                </span>
                            </p>
                        </div>
                    </div>
                    <div class="flex flex-col space-y-4">
                         <a href="tel:+17868507699" class="w-full bg-green-700 text-white text-center font-bold py-4 px-6 rounded-lg hover:bg-green-800 transition duration-300">Llamar Ahora</a>
                         <a href="mailto:info@miamiautocredit.com" class="w-full bg-gray-800 text-white text-center font-bold py-4 px-6 rounded-lg hover:bg-gray-900 transition duration-300">Enviar un Email</a>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <footer class="bg-gray-800 text-white py-6">
        <div class="container mx-auto px-6 text-center">
            <p>&copy; 2025 Miami Auto Credit. Todos los derechos reservados.</p>
        </div>
    </footer>

    <div id="vehicle-modal" class="modal fixed inset-0 flex items-center justify-center p-4 z-50">
        <div class="bg-white rounded-lg shadow-xl p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto relative">
            <button id="close-modal" class="absolute top-4 right-4 text-gray-500 hover:text-gray-800 text-2xl font-bold">‚úñ</button>
            <h3 id="modal-title" class="text-3xl font-bold text-gray-900 mb-4"></h3>
            <img id="modal-image" src="" alt="Vehicle Image" class="w-full h-64 object-cover rounded-lg mb-4">
            <div class="grid grid-cols-2 gap-4 mb-4 text-gray-700">
                <p><strong>Precio:</strong> <span id="modal-price"></span></p>
                <p><strong>A√±o:</strong> <span id="modal-year"></span></p>
                <p><strong>Millaje:</strong> <span id="modal-mileage"></span></p>
                <p><strong>Tipo:</strong> <span id="modal-type"></span></p>
            </div>
            <p id="modal-description" class="text-gray-600 mb-6"></p>

            <div class="mt-6 p-4 bg-green-50 rounded-lg border border-green-200">
                <h4 class="text-xl font-bold text-green-800 mb-3">‚ú® Preg√∫ntale a La Vansita ‚ú®</h4>
                <p class="text-gray-700 text-sm mb-3">¬øTienes alguna pregunta r√°pida sobre este veh√≠culo? ¬°Preg√∫ntale a nuestro asistente virtual!</p>
                <div class="flex flex-col sm:flex-row gap-3">
                    <input type="text" id="gemini-question-input" placeholder="Ej: ¬øEs buena para viajes largos?" class="flex-grow p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-700">
                    <button id="ask-gemini-button" class="bg-green-700 text-white font-semibold py-2 px-4 rounded-lg hover:bg-green-800 transition-colors duration-300 flex-shrink-0">
                        Preguntar
                    </button>
                </div>
                <div id="gemini-response" class="mt-4 p-3 bg-white rounded-lg border border-gray-200 text-gray-800 min-h-[60px] flex items-center justify-center text-center">
                    <span class="text-gray-500">Tu respuesta aparecer√° aqu√≠...</span>
                </div>
                <div id="gemini-loading" class="hidden mt-4 text-center text-green-700">
                    Cargando respuesta...
                </div>
            </div>
            <a href="tel:+17868507699" class="block text-center bg-green-700 text-white font-bold py-3 rounded-lg hover:bg-green-800 transition duration-300 mt-6">¬°Ll√°manos para m√°s detalles!</a>
        </div>
    </div>

    <script>
        const vehicles = [
            { id: 1, make: 'Ford', model: 'Transit 350 Van High Roof w/Sliding Pass. 148-in. WB EL', year: 2015, price: 16990, mileage: 185807, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Una Ford Transit 350 de techo alto extendida, ideal para entregas o conversiones. Muy espaciosa y fiable.' },
            { id: 2, make: 'Ford', model: 'Transit 250 Van Med. Roof w/Sliding Pass. 148-in. WB', year: 2015, price: 10990, mileage: 186210, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Furgoneta Ford Transit 250 de techo medio, perfecta para el trabajo diario. Confiable y eficiente.' },
            { id: 3, make: 'Ford', model: 'Transit 350 Van High Roof w/Sliding Pass. 148-in. WB EL', year: 2015, price: 17990, mileage: 181195, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Otra Ford Transit 350 de techo alto, ideal para cargas grandes y transporte.' },
            { id: 4, make: 'Ford', model: 'Transit 250 Van Low Roof 60/40 Pass. 148-in. WB', year: 2016, price: 15990, mileage: 104214, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Furgoneta Ford Transit 250 de techo bajo, con puertas de paso 60/40. Eficiente y pr√°ctica.' },
            { id: 5, make: 'Ford', model: 'Transit 250 Van Low Roof w/Sliding Pass. 130-in. WB', year: 2016, price: 15990, mileage: 100144, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%13.08.34_a077762a.jpg', description: 'Ford Transit 250 de techo bajo con puerta corredera, distancia entre ejes corta. Maniobrable y confiable.' },
            { id: 6, make: 'Ford', model: 'Transit 250 Van Med. Roof w/Sliding Pass. 130-in. WB', year: 2016, price: 18990, mileage: 104652, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 250 de techo medio con puerta corredera, ideal para una variedad de usos.' },
            { id: 7, make: 'Ford', model: 'Transit 350 Van Low Roof 60/40 Pass. 148-in. WB', year: 2016, price: 9990, mileage: 170109, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 350 de techo bajo con puertas de paso 60/40. Capacidad de carga robusta.' },
            { id: 8, make: 'Ford', model: 'Transit 150 Van Low Roof w/Sliding Pass. 130-in. WB', year: 2016, price: 14990, mileage: 149115, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 150 de techo bajo con puerta corredera, compacta y f√°cil de conducir.' },
            { id: 9, make: 'Ford', model: 'Transit 350 Wagon Low Roof XL w/Sliding Pass. 148-in. WB', year: 2016, price: 18990, mileage: 130312, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 350 Wagon, ideal para transporte de pasajeros o una combinaci√≥n de carga y pasajeros.' },
            { id: 10, make: 'Ford', model: 'Transit 250 Van Med. Roof w/Sliding Pass. 148-in. WB', year: 2016, price: 13990, mileage: 180532, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 250 de techo medio, una furgoneta confiable y espaciosa para diversas necesidades.' },
            { id: 11, make: 'Ford', model: 'Transit 150 Van Low Roof 60/40 Pass. 130-in. WB', year: 2016, price: 12990, mileage: 150587, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Otra Ford Transit 150 de techo bajo, con f√°cil acceso gracias a las puertas 60/40.' },
            { id: 12, make: 'Ford', model: 'Transit 350 Van High Roof w/Sliding Pass. 148-in. WB EL', year: 2017, price: 18990, mileage: 190235, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 350 de techo alto y distancia entre ejes extendida, m√°xima capacidad.' },
            { id: 13, make: 'Ford', model: 'Transit 150 Van Med. Roof w/Sliding Pass. 130-in. WB', year: 2017, price: null, mileage: 148320, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 150 de techo medio con puerta corredera, un equilibrio perfecto entre tama√±o y capacidad.' },
            { id: 14, make: 'Ford', model: 'Transit 350 Van High Roof w/Sliding Pass. 148-in. WB EL', year: 2017, price: 22990, mileage: 133244, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Otra Ford Transit 350 de techo alto con menor millaje, lista para el trabajo pesado.' },
            { id: 15, make: 'Ford', model: 'Transit 150 Van Low Roof w/Sliding Pass. 130-in. WB', year: 2017, price: 13990, mileage: 166062, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 150 de techo bajo con puerta corredera, compacta y eficiente para la ciudad.' },
            { id: 16, make: 'Ford', model: 'Transit 350 Wagon Med. Roof XL w/Sliding Pass. 148-in. WB', year: 2017, price: 16990, mileage: 190164, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 350 Wagon de techo medio, con configuraci√≥n XL para mayor espacio.' },
            { id: 17, make: 'Ford', model: 'Transit 250 Van Low Roof 60/40 Pass.130-in. WB', year: 2017, price: 13990, mileage: 156200, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 250 de techo bajo con puertas 60/40, vers√°til y econ√≥mica.' },
            { id: 18, make: 'Ford', model: 'Transit 250 Van Med. Roof w/Sliding Pass. 130-in. WB', year: 2017, price: 13990, mileage: 183062, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 250 de techo medio, una furgoneta de trabajo fiable con puerta corredera.' },
            { id: 19, make: 'Ford', model: 'Transit 250 Van Med. Roof w/Sliding Pass. 148-in. WB', year: 2018, price: 14990, mileage: 187461, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 250 de techo medio, modelo m√°s reciente con buen rendimiento.' },
            { id: 20, make: 'Ford', model: 'Transit 350 Van Med. Roof w/Sliding Pass. 148-in. WB', year: 2018, price: 19990, mileage: 129626, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 350 de techo medio, con mayor capacidad y menor millaje para el a√±o.' },
            { id: 21, make: 'Ford', model: 'Transit 150 Van Med. Roof w/Sliding Pass. 148-in. WB', year: 2018, price: 18990, mileage: 127538, type: 'Van', imageUrl: 'https://raw.githubusercontent.com/google/generative-ai-docs/main/site/en/gemini-api/docs/images/WhatsApp%20Image%202025-06-02%20at%2013.08.34_a077762a.jpg', description: 'Ford Transit 150 de techo medio, un veh√≠culo comercial vers√°til y confiable.' }
        ];

        const vehicleGrid = document.getElementById('vehicle-grid');
        const searchInput = document.getElementById('search-input');
        const makeFilter = document.getElementById('make-filter');
        const yearFilter = document.getElementById('year-filter');
        const vehicleModal = document.getElementById('vehicle-modal');
        const closeModalButton = document.getElementById('close-modal');
        const modalTitle = document.getElementById('modal-title');
        const modalImage = document.getElementById('modal-image');
        const modalPrice = document.getElementById('modal-price');
        const modalYear = document.getElementById('modal-year');
        const modalMileage = document.getElementById('modal-mileage');
        const modalType = document.getElementById('modal-type');
        const modalDescription = document.getElementById('modal-description');
        const geminiQuestionInput = document.getElementById('gemini-question-input');
        const askGeminiButton = document.getElementById('ask-gemini-button');
        const geminiResponseDiv = document.getElementById('gemini-response');
        const geminiLoadingDiv = document.getElementById('gemini-loading');
        let makeDistributionChart;
        let currentVehicleForGemini = null;

        function formatPrice(price) {
            if (price === null || price === undefined) {
                return 'Precio no disponible';
            }
            return new Intl.NumberFormat('es-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(price);
        }

        function formatMileage(mileage) {
            if (mileage === null || mileage === undefined) {
                return 'Millaje no disponible';
            }
            return new Intl.NumberFormat('es-US').format(mileage) + ' millas';
        }

        function renderVehicles(filteredVehicles) {
            vehicleGrid.innerHTML = '';
            if (filteredVehicles.length === 0) {
                vehicleGrid.innerHTML = '<p class="col-span-full text-center text-gray-600 text-lg">No se encontraron veh√≠culos que coincidan con tu b√∫squeda.</p>';
                return;
            }
            filteredVehicles.forEach(vehicle => {
                const card = document.createElement('div');
                card.className = 'vehicle-card bg-white rounded-lg shadow-md overflow-hidden cursor-pointer';
                card.innerHTML = `
                    <img src="${vehicle.imageUrl}" alt="${vehicle.make} ${vehicle.model}" class="w-full h-48 object-cover">
                    <div class="p-4">
                        <h3 class="text-xl font-semibold text-gray-900 mb-1">${vehicle.year} ${vehicle.make} ${vehicle.model}</h3>
                        <p class="text-2xl font-bold text-green-700 mb-2">${formatPrice(vehicle.price)}</p>
                        <p class="text-gray-600 text-sm">${formatMileage(vehicle.mileage)}</p>
                    </div>
                `;
                card.addEventListener('click', () => openVehicleModal(vehicle));
                vehicleGrid.appendChild(card);
            });
        }

        function openVehicleModal(vehicle) {
            currentVehicleForGemini = vehicle;
            modalTitle.textContent = `${vehicle.year} ${vehicle.make} ${vehicle.model}`;
            modalImage.src = vehicle.imageUrl;
            modalPrice.textContent = formatPrice(vehicle.price);
            modalYear.textContent = vehicle.year;
            modalMileage.textContent = formatMileage(vehicle.mileage);
            modalType.textContent = vehicle.type;
            modalDescription.textContent = vehicle.description;
            geminiQuestionInput.value = '';
            geminiResponseDiv.innerHTML = '<span class="text-gray-500">Tu respuesta aparecer√° aqu√≠...</span>';
            geminiLoadingDiv.classList.add('hidden');
            vehicleModal.style.display = 'flex';
        }

        closeModalButton.addEventListener('click', () => {
            vehicleModal.style.display = 'none';
            currentVehicleForGemini = null;
        });

        vehicleModal.addEventListener('click', (e) => {
            if (e.target === vehicleModal) {
                vehicleModal.style.display = 'none';
                currentVehicleForGemini = null;
            }
        });

        async function askGeminiAboutVehicle() {
            const question = geminiQuestionInput.value.trim();
            if (!question || !currentVehicleForGemini) {
                geminiResponseDiv.textContent = 'Por favor, introduce una pregunta y selecciona un veh√≠culo.';
                return;
            }

            geminiResponseDiv.textContent = '';
            geminiLoadingDiv.classList.remove('hidden');
            askGeminiButton.disabled = true;

            const vehicle = currentVehicleForGemini;
            const prompt = `Eres un asistente de ventas de veh√≠culos amigable y conocedor de Miami Auto Credit. Bas√°ndote en la siguiente informaci√≥n del veh√≠culo, responde a la pregunta del usuario. Si la pregunta no se puede responder directamente con la informaci√≥n proporcionada, da una respuesta √∫til y sugiere que el usuario se ponga en contacto con el concesionario para m√°s detalles, mencionando el n√∫mero de tel√©fono 786-850-7699.

Informaci√≥n del Veh√≠culo:
Marca: ${vehicle.make}
Modelo: ${vehicle.model}
A√±o: ${vehicle.year}
Precio: ${formatPrice(vehicle.price)}
Kilometraje: ${formatMileage(vehicle.mileage)}
Tipo: ${vehicle.type}
Descripci√≥n: ${vehicle.description}

Pregunta del Usuario:
${question}

Tu Respuesta:`;

            let chatHistory = [];
            chatHistory.push({ role: "user", parts: [{ text: prompt }] });
            const payload = { contents: chatHistory };
            // IMPORTANT: Replace with your actual API key
            const apiKey = ""; // <--- Add your Gemini API key here
            const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;

            try {
                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                const result = await response.json();

                if (result.candidates && result.candidates.length > 0 &&
                    result.candidates[0].content && result.candidates[0].content.parts &&
                    result.candidates[0].content.parts.length > 0) {
                    const text = result.candidates[0].content.parts[0].text;
                    geminiResponseDiv.textContent = text;
                } else {
                    geminiResponseDiv.textContent = 'Lo siento, no pude generar una respuesta. Por favor, intenta de nuevo o cont√°ctanos directamente.';
                }
            } catch (error) {
                console.error('Error al llamar a la API de Gemini:', error);
                geminiResponseDiv.textContent = 'Hubo un error al procesar tu solicitud. Por favor, intenta de nuevo m√°s tarde.';
            } finally {
                geminiLoadingDiv.classList.add('hidden');
                askGeminiButton.disabled = false;
            }
        }

        askGeminiButton.addEventListener('click', askGeminiAboutVehicle);

        function filterVehicles() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedYear = yearFilter.value;

            const filtered = vehicles.filter(vehicle => {
                const matchesSearch = vehicle.model.toLowerCase().includes(searchTerm);
                const matchesYear = selectedYear === '' || vehicle.year.toString() === selectedYear;
                return matchesSearch && matchesYear;
            });
            renderVehicles(filtered);
            updateChart(filtered);
        }

        searchInput.addEventListener('input', filterVehicles);
        makeFilter.addEventListener('change', filterVehicles); // This will be disabled, but for completeness
        yearFilter.addEventListener('change', filterVehicles);

        function populateFilters() {
            // Since we only have Ford Transit, pre-select and disable the make filter
            makeFilter.innerHTML = '<option value="Ford">Ford</option>';
            makeFilter.value = 'Ford';
            makeFilter.disabled = true;

            const years = [...new Set(vehicles.map(v => v.year))].sort((a, b) => b - a);
            yearFilter.innerHTML = '<option value="">Todos los A√±os</option>'; // Reset before populating
            years.forEach(year => {
                const option = document.createElement('option');
                option.value = year;
                option.textContent = year;
                yearFilter.appendChild(option);
            });
        }

        function createChart() {
            const ctx = document.getElementById('makeDistributionChart').getContext('2d');
            const modelCounts = {};
            vehicles.forEach(vehicle => {
                modelCounts[vehicle.model] = (modelCounts[vehicle.model] || 0) + 1;
            });

            const labels = Object.keys(modelCounts);
            const data = Object.values(modelCounts);

            makeDistributionChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels.map(label => {
                        const words = label.split(' ');
                        let wrappedLabel = '';
                        let currentLine = '';
                        words.forEach(word => {
                            if ((currentLine + word).length > 16 && currentLine.length > 0) {
                                wrappedLabel += currentLine + '\n';
                                currentLine = word;
                            } else {
                                currentLine += (currentLine.length > 0 ? ' ' : '') + word;
                            }
                        });
                        wrappedLabel += currentLine;
                        return wrappedLabel;
                    }),
                    datasets: [{
                        label: 'N√∫mero de Veh√≠culos',
                        data: data,
                        backgroundColor: 'rgba(22, 163, 74, 0.6)', /* green-600 with opacity */
                        borderColor: 'rgba(22, 163, 74, 1)', /* green-600 solid */
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                title: function(context) {
                                    return context[0].label.replace(/\n/g, ' ');
                                },
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed.y !== null) {
                                        label += context.parsed.y;
                                    }
                                    return label;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Cantidad'
                            },
                            ticks: {
                                precision: 0
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Modelo de Ford Transit'
                            }
                        }
                    }
                }
            });
        }

        function updateChart(currentVehicles) {
            if (makeDistributionChart) {
                makeDistributionChart.destroy();
            }
            const modelCounts = {};
            currentVehicles.forEach(vehicle => {
                modelCounts[vehicle.model] = (modelCounts[vehicle.model] || 0) + 1;
            });

            const labels = Object.keys(modelCounts);
            const data = Object.values(modelCounts);

            const ctx = document.getElementById('makeDistributionChart').getContext('2d');
            makeDistributionChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels.map(label => {
                        const words = label.split(' ');
                        let wrappedLabel = '';
                        let currentLine = '';
                        words.forEach(word => {
                            if ((currentLine + word).length > 16 && currentLine.length > 0) {
                                wrappedLabel += currentLine + '\n';
                                currentLine = word;
                            } else {
                                currentLine += (currentLine.length > 0 ? ' ' : '') + word;
                            }
                        });
                        wrappedLabel += currentLine;
                        return wrappedLabel;
                    }),
                    datasets: [{
                        label: 'N√∫mero de Veh√≠culos',
                        data: data,
                        backgroundColor: 'rgba(22, 163, 74, 0.6)', /* green-600 with opacity */
                        borderColor: 'rgba(22, 163, 74, 1)', /* green-600 solid */
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                title: function(context) {
                                    return context[0].label.replace(/\n/g, ' ');
                                },
                                label: function(context) {
                                    let label = context.dataset.label || '';
                                    if (label) {
                                        label += ': ';
                                    }
                                    if (context.parsed.y !== null) {
                                        label += context.parsed.y;
                                    }
                                    return label;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Cantidad'
                            },
                            ticks: {
                                precision: 0
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Modelo de Ford Transit'
                            }
                        }
                    }
                }
            });
        }

        document.addEventListener('DOMContentLoaded', () => {
            populateFilters();
            renderVehicles(vehicles);
            createChart();
        });
    </script>

</body>
</html>
